/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-07 05:06:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class uploadAjax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1661137988953L));
    _jspx_dependants.put("jar:file:/C:/Users/KTE001/Documents/workspace-sts-3.9.12.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ex05/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("	<title>Home</title>	\n");
      out.write("</head>\n");
      out.write("<style>\n");
      out.write("	.uploadResult{\n");
      out.write("		width:100%;\n");
      out.write("		background:gray;\n");
      out.write("	}\n");
      out.write("	.uploadResult ul{\n");
      out.write("		display:flex;\n");
      out.write("		flex-flow:row;\n");
      out.write("		justify-content:center;\n");
      out.write("		align-items:center;\n");
      out.write("	}\n");
      out.write("	.uploadResult ul li{\n");
      out.write("		list-style:none;\n");
      out.write("		padding:10px;\n");
      out.write("		align-content:center;\n");
      out.write("		text-align:center;\n");
      out.write("	}\n");
      out.write("	.uploadResult ul li img{\n");
      out.write("		width:100px;\n");
      out.write("	}	\n");
      out.write("	.uploadResult ul li span{\n");
      out.write("		color:white;\n");
      out.write("	}\n");
      out.write("	.bigPictureWrapper{\n");
      out.write("		position: absolute;\n");
      out.write("		display: none;\n");
      out.write("		justify-content: center;\n");
      out.write("		align-items: center;\n");
      out.write("		top: 0%;\n");
      out.write("		width: 100%;\n");
      out.write("		height: 100%;\n");
      out.write("		background-color: gray;\n");
      out.write("		z-index: 100;\n");
      out.write("		background: rgba(255,255,255,0.5);\n");
      out.write("	}\n");
      out.write("	.bigPicture{\n");
      out.write("		position: relative;\n");
      out.write("		display: flex;\n");
      out.write("		justify-content: center;\n");
      out.write("		align-items: center;\n");
      out.write("	}\n");
      out.write("	.bigPicture img{\n");
      out.write("		width: 600px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("</style>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class='uploadDiv'>\n");
      out.write("	<input type='file' name='uploadFile' multiple>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class='uploadResult'>\n");
      out.write("	<ul>\n");
      out.write("	</ul>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"bigPictureWrapper\">\n");
      out.write("	<div class=\"bigPicture\">	\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<button id='uploadBtn'>Upload</button>\n");
      out.write("\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.1.js\" integrity=\"sha256-3zlB5s2uwoUzrXK3BT7AX3FyvojsraNFxCc2vC/7pNI=\" crossorigin=\"anonymous\"></script>\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("//이미지 업로드시 원본이미지 보여주기\n");
      out.write("function showImage(fileCallPath){\n");
      out.write("	//alert(fileCallPath);\n");
      out.write("	\n");
      out.write("	$(\".bigPictureWrapper\").css(\"display\",\"flex\").show();\n");
      out.write("	\n");
      out.write("	$(\".bigPicture\")\n");
      out.write("			.html(\"<img src='/display?fileName=\"+encodeURI(fileCallPath)+\"'>\")\n");
      out.write("			.animate({width:'100%', height: '100%'}, 1000);\n");
      out.write("	$(\".bigPictureWrapper\").on(\"click\", function(e){\n");
      out.write("		$(\".bigPicture\").animate({width:'0%', height: '0%'}, 1000);\n");
      out.write("		/* setTimeout(function(){\n");
      out.write("			$('.bigPictureWrapper').hide();\n");
      out.write("		}, 1000); 위의 코드는 IE용*/\n");
      out.write("		setTimeout(()=>{\n");
      out.write("			$(this).hide();\n");
      out.write("		},1000);\n");
      out.write("	});\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("$(document).ready(function(){\n");
      out.write("	\n");
      out.write("	//파일 크기, 확장자 체크\n");
      out.write("	var regex=new RegExp(\"(.*?)\\.(exe|sh|alz)$\");\n");
      out.write("	var maxSize=5242880;	//5MB 제한\n");
      out.write("	\n");
      out.write("	function checkExtension(fileName,fileSize){\n");
      out.write("		\n");
      out.write("		if(fileSize>=maxSize){\n");
      out.write("			alert(\"파일 사이즈 초과\");\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		if(regex.test(fileName)){\n");
      out.write("			alert(\"해당 종류의 파일은 업로드할 수 없습니다.\");\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		return true;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	var cloneObj=$(\".uploadDiv\").clone();\n");
      out.write("	\n");
      out.write("	$('#uploadBtn').on('click',function(e){\n");
      out.write("		var formData=new FormData();\n");
      out.write("		var inputFile=$(\"input[name='uploadFile']\");\n");
      out.write("		var files=inputFile[0].files;\n");
      out.write("		\n");
      out.write("		console.log(files);\n");
      out.write("		\n");
      out.write("		for(var i=0;i<files.length;i++){\n");
      out.write("			//파일 크기, 확장자 체크\n");
      out.write("			if(!checkExtension(files[i].name,files[i].size))\n");
      out.write("				return false;\n");
      out.write("				\n");
      out.write("			formData.append(\"uploadFile\",files[i]);\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		$.ajax({\n");
      out.write("			url:'/uploadAjaxAction',\n");
      out.write("			processData:false,\n");
      out.write("			contentType:false,\n");
      out.write("			data:formData,\n");
      out.write("			type:'POST',\n");
      out.write("			success:function(result){\n");
      out.write("				console.log(result);\n");
      out.write("				\n");
      out.write("				//input file 입력창 초기화\n");
      out.write("				$(\".uploadDiv\").html(cloneObj.html());\n");
      out.write("				\n");
      out.write("				showUploadedFile(result);\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	var uploadResult=$(\".uploadResult ul\");\n");
      out.write("	\n");
      out.write("	function showUploadedFile(uploadResultArr){\n");
      out.write("		var str=\"\";\n");
      out.write("		\n");
      out.write("		$(uploadResultArr).each(function(i,obj){\n");
      out.write("			\n");
      out.write("			if(!obj.image){\n");
      out.write("				var fileCallPath = encodeURIComponent(obj.uploadPath+\"/\"+obj.uuid+\"_\"+obj.fileName);\n");
      out.write("				\n");
      out.write("				var fileLink = fileCallPath.replace(new RegExp(/\\\\/g),\"/\");\n");
      out.write("				\n");
      out.write("				str += \"<li><div><a href='/download?fileName=\"+fileCallPath+\"'>\"\n");
      out.write("					   +\"<img src='/resources/img/attach.png'>\"\n");
      out.write("					   +obj.fileName+\"</a>\"\n");
      out.write("					   +\"<span data-file=\\'\"+fileCallPath+\"\\' data-type='file'> x </span>\"\n");
      out.write("					   +\"<div></li>\";	\n");
      out.write("			}else{\n");
      out.write("				var fileCallPath = encodeURIComponent(obj.uploadPath+\"/s_\"+obj.uuid+\"_\"+obj.fileName);\n");
      out.write("				\n");
      out.write("				var originPath = obj.uploadPath+ \"\\\\\" + obj.uuid + \"_\" + obj.fileName;\n");
      out.write("				\n");
      out.write("				originPath = originPath.replace(new RegExp(/\\\\/g),\"/\")				\n");
      out.write("				\n");
      out.write("				str += \"<li><a href=\\\"javascript:showImage(\\'\"+originPath+\"')\\\">\"\n");
      out.write("					   +\"<img src='/display?fileName=\"+fileCallPath+\"'></a>\"\n");
      out.write("					   +\"<span data-file=\\'\"+fileCallPath+\"\\' data-type='image'> x </span>\"\n");
      out.write("					   +\"</li>\";\n");
      out.write("			}			\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		uploadResult.append(str);\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	$(\".uploadResult\").on(\"click\",\"span\", function(e){\n");
      out.write("		var targetFile = $(this).data(\"file\");\n");
      out.write("		var type = $(this).data(\"type\");\n");
      out.write("		console.log(targetFile);\n");
      out.write("		\n");
      out.write("		$.ajax({\n");
      out.write("			url: '/deleteFile',\n");
      out.write("			data: {fileName: targetFile, type:type},\n");
      out.write("			dataType:'text',\n");
      out.write("			type: 'POST', \n");
      out.write("		    success: function(result){\n");
      out.write("	  	    	alert(result);\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
